(function() {var implementors = {
"anyhow":[["impl Freeze for <a class=\"struct\" href=\"anyhow/struct.Error.html\" title=\"struct anyhow::Error\">Error</a>",1,["anyhow::Error"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"anyhow/struct.Chain.html\" title=\"struct anyhow::Chain\">Chain</a>&lt;'a&gt;",1,["anyhow::Chain"]]],
"darling_core":[["impl&lt;V, F&gt; Freeze for <a class=\"enum\" href=\"darling_core/ast/enum.Data.html\" title=\"enum darling_core::ast::Data\">Data</a>&lt;V, F&gt;",1,["darling_core::ast::data::Data"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"darling_core/ast/struct.Fields.html\" title=\"struct darling_core::ast::Fields\">Fields</a>&lt;T&gt;",1,["darling_core::ast::data::Fields"]],["impl Freeze for <a class=\"enum\" href=\"darling_core/ast/enum.Style.html\" title=\"enum darling_core::ast::Style\">Style</a>",1,["darling_core::ast::data::Style"]],["impl&lt;T, L, C&gt; Freeze for <a class=\"enum\" href=\"darling_core/ast/enum.GenericParam.html\" title=\"enum darling_core::ast::GenericParam\">GenericParam</a>&lt;T, L, C&gt;<span class=\"where fmt-newline\">where\n    C: Freeze,\n    L: Freeze,\n    T: Freeze,</span>",1,["darling_core::ast::generics::GenericParam"]],["impl&lt;P, W&gt; Freeze for <a class=\"struct\" href=\"darling_core/ast/struct.Generics.html\" title=\"struct darling_core::ast::Generics\">Generics</a>&lt;P, W&gt;<span class=\"where fmt-newline\">where\n    W: Freeze,</span>",1,["darling_core::ast::generics::Generics"]],["impl Freeze for <a class=\"struct\" href=\"darling_core/error/struct.Error.html\" title=\"struct darling_core::error::Error\">Error</a>",1,["darling_core::error::Error"]],["impl Freeze for <a class=\"struct\" href=\"darling_core/error/struct.IntoIter.html\" title=\"struct darling_core::error::IntoIter\">IntoIter</a>",1,["darling_core::error::IntoIter"]],["impl Freeze for <a class=\"struct\" href=\"darling_core/error/struct.Accumulator.html\" title=\"struct darling_core::error::Accumulator\">Accumulator</a>",1,["darling_core::error::Accumulator"]],["impl Freeze for <a class=\"enum\" href=\"darling_core/usage/enum.Purpose.html\" title=\"enum darling_core::usage::Purpose\">Purpose</a>",1,["darling_core::usage::options::Purpose"]],["impl Freeze for <a class=\"struct\" href=\"darling_core/usage/struct.Options.html\" title=\"struct darling_core::usage::Options\">Options</a>",1,["darling_core::usage::options::Options"]],["impl Freeze for <a class=\"struct\" href=\"darling_core/util/struct.Flag.html\" title=\"struct darling_core::util::Flag\">Flag</a>",1,["darling_core::util::flag::Flag"]],["impl Freeze for <a class=\"struct\" href=\"darling_core/util/struct.IdentString.html\" title=\"struct darling_core::util::IdentString\">IdentString</a>",1,["darling_core::util::ident_string::IdentString"]],["impl Freeze for <a class=\"struct\" href=\"darling_core/util/struct.Ignored.html\" title=\"struct darling_core::util::Ignored\">Ignored</a>",1,["darling_core::util::ignored::Ignored"]],["impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"darling_core/util/enum.Override.html\" title=\"enum darling_core::util::Override\">Override</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["darling_core::util::over_ride::Override"]],["impl Freeze for <a class=\"struct\" href=\"darling_core/util/struct.PathList.html\" title=\"struct darling_core::util::PathList\">PathList</a>",1,["darling_core::util::path_list::PathList"]],["impl Freeze for <a class=\"enum\" href=\"darling_core/util/enum.Shape.html\" title=\"enum darling_core::util::Shape\">Shape</a>",1,["darling_core::util::shape::Shape"]],["impl Freeze for <a class=\"struct\" href=\"darling_core/util/struct.ShapeSet.html\" title=\"struct darling_core::util::ShapeSet\">ShapeSet</a>",1,["darling_core::util::shape::ShapeSet"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"darling_core/util/struct.SpannedValue.html\" title=\"struct darling_core::util::SpannedValue\">SpannedValue</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["darling_core::util::spanned_value::SpannedValue"]],["impl&lt;T, O&gt; Freeze for <a class=\"struct\" href=\"darling_core/util/struct.WithOriginal.html\" title=\"struct darling_core::util::WithOriginal\">WithOriginal</a>&lt;T, O&gt;<span class=\"where fmt-newline\">where\n    O: Freeze,\n    T: Freeze,</span>",1,["darling_core::util::with_original::WithOriginal"]]],
"derive_builder":[["impl Freeze for <a class=\"struct\" href=\"derive_builder/struct.UninitializedFieldError.html\" title=\"struct derive_builder::UninitializedFieldError\">UninitializedFieldError</a>",1,["derive_builder::error::UninitializedFieldError"]]],
"fnv":[["impl Freeze for <a class=\"struct\" href=\"fnv/struct.FnvHasher.html\" title=\"struct fnv::FnvHasher\">FnvHasher</a>",1,["fnv::FnvHasher"]]],
"half":[["impl Freeze for <a class=\"struct\" href=\"half/struct.bf16.html\" title=\"struct half::bf16\">bf16</a>",1,["half::bfloat::bf16"]],["impl Freeze for <a class=\"struct\" href=\"half/struct.f16.html\" title=\"struct half::f16\">f16</a>",1,["half::binary16::f16"]]],
"hashbrown":[["impl Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.InsertSlot.html\" title=\"struct hashbrown::raw::InsertSlot\">InsertSlot</a>",1,["hashbrown::raw::inner::InsertSlot"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.Bucket.html\" title=\"struct hashbrown::raw::Bucket\">Bucket</a>&lt;T&gt;",1,["hashbrown::raw::inner::Bucket"]],["impl&lt;T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawTable.html\" title=\"struct hashbrown::raw::RawTable\">RawTable</a>&lt;T, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["hashbrown::raw::inner::RawTable"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIter.html\" title=\"struct hashbrown::raw::RawIter\">RawIter</a>&lt;T&gt;",1,["hashbrown::raw::inner::RawIter"]],["impl&lt;T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIntoIter.html\" title=\"struct hashbrown::raw::RawIntoIter\">RawIntoIter</a>&lt;T, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["hashbrown::raw::inner::RawIntoIter"]],["impl&lt;'a, T, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawDrain.html\" title=\"struct hashbrown::raw::RawDrain\">RawDrain</a>&lt;'a, T, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["hashbrown::raw::inner::RawDrain"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"hashbrown/raw/struct.RawIterHash.html\" title=\"struct hashbrown::raw::RawIterHash\">RawIterHash</a>&lt;T&gt;",1,["hashbrown::raw::inner::RawIterHash"]],["impl Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.DefaultHashBuilder.html\" title=\"enum hashbrown::hash_map::DefaultHashBuilder\">DefaultHashBuilder</a>",1,["hashbrown::map::DefaultHashBuilder"]],["impl&lt;K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.HashMap.html\" title=\"struct hashbrown::hash_map::HashMap\">HashMap</a>&lt;K, V, S, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,\n    S: Freeze,</span>",1,["hashbrown::map::HashMap"]],["impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Iter.html\" title=\"struct hashbrown::hash_map::Iter\">Iter</a>&lt;'a, K, V&gt;",1,["hashbrown::map::Iter"]],["impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IterMut.html\" title=\"struct hashbrown::hash_map::IterMut\">IterMut</a>&lt;'a, K, V&gt;",1,["hashbrown::map::IterMut"]],["impl&lt;K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoIter.html\" title=\"struct hashbrown::hash_map::IntoIter\">IntoIter</a>&lt;K, V, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["hashbrown::map::IntoIter"]],["impl&lt;K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoKeys.html\" title=\"struct hashbrown::hash_map::IntoKeys\">IntoKeys</a>&lt;K, V, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["hashbrown::map::IntoKeys"]],["impl&lt;K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.IntoValues.html\" title=\"struct hashbrown::hash_map::IntoValues\">IntoValues</a>&lt;K, V, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["hashbrown::map::IntoValues"]],["impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Keys.html\" title=\"struct hashbrown::hash_map::Keys\">Keys</a>&lt;'a, K, V&gt;",1,["hashbrown::map::Keys"]],["impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Values.html\" title=\"struct hashbrown::hash_map::Values\">Values</a>&lt;'a, K, V&gt;",1,["hashbrown::map::Values"]],["impl&lt;'a, K, V, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.Drain.html\" title=\"struct hashbrown::hash_map::Drain\">Drain</a>&lt;'a, K, V, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["hashbrown::map::Drain"]],["impl&lt;'a, K, V, F, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.ExtractIf.html\" title=\"struct hashbrown::hash_map::ExtractIf\">ExtractIf</a>&lt;'a, K, V, F, A&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,</span>",1,["hashbrown::map::ExtractIf"]],["impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.ValuesMut.html\" title=\"struct hashbrown::hash_map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;",1,["hashbrown::map::ValuesMut"]],["impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilderMut.html\" title=\"struct hashbrown::hash_map::RawEntryBuilderMut\">RawEntryBuilderMut</a>&lt;'a, K, V, S, A&gt;",1,["hashbrown::map::RawEntryBuilderMut"]],["impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.RawEntryMut.html\" title=\"enum hashbrown::hash_map::RawEntryMut\">RawEntryMut</a>&lt;'a, K, V, S, A&gt;",1,["hashbrown::map::RawEntryMut"]],["impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawOccupiedEntryMut.html\" title=\"struct hashbrown::hash_map::RawOccupiedEntryMut\">RawOccupiedEntryMut</a>&lt;'a, K, V, S, A&gt;",1,["hashbrown::map::RawOccupiedEntryMut"]],["impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawVacantEntryMut.html\" title=\"struct hashbrown::hash_map::RawVacantEntryMut\">RawVacantEntryMut</a>&lt;'a, K, V, S, A&gt;",1,["hashbrown::map::RawVacantEntryMut"]],["impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.RawEntryBuilder.html\" title=\"struct hashbrown::hash_map::RawEntryBuilder\">RawEntryBuilder</a>&lt;'a, K, V, S, A&gt;",1,["hashbrown::map::RawEntryBuilder"]],["impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.Entry.html\" title=\"enum hashbrown::hash_map::Entry\">Entry</a>&lt;'a, K, V, S, A&gt;<span class=\"where fmt-newline\">where\n    K: Freeze,</span>",1,["hashbrown::map::Entry"]],["impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedEntry.html\" title=\"struct hashbrown::hash_map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V, S, A&gt;<span class=\"where fmt-newline\">where\n    K: Freeze,</span>",1,["hashbrown::map::OccupiedEntry"]],["impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.VacantEntry.html\" title=\"struct hashbrown::hash_map::VacantEntry\">VacantEntry</a>&lt;'a, K, V, S, A&gt;<span class=\"where fmt-newline\">where\n    K: Freeze,</span>",1,["hashbrown::map::VacantEntry"]],["impl&lt;'a, 'b, K, Q: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, V, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_map/enum.EntryRef.html\" title=\"enum hashbrown::hash_map::EntryRef\">EntryRef</a>&lt;'a, 'b, K, Q, V, S, A&gt;<span class=\"where fmt-newline\">where\n    K: Freeze,</span>",1,["hashbrown::map::EntryRef"]],["impl&lt;'a, 'b, K, Q: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedEntryRef.html\" title=\"struct hashbrown::hash_map::OccupiedEntryRef\">OccupiedEntryRef</a>&lt;'a, 'b, K, Q, V, S, A&gt;<span class=\"where fmt-newline\">where\n    K: Freeze,</span>",1,["hashbrown::map::OccupiedEntryRef"]],["impl&lt;'a, 'b, K, Q: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.VacantEntryRef.html\" title=\"struct hashbrown::hash_map::VacantEntryRef\">VacantEntryRef</a>&lt;'a, 'b, K, Q, V, S, A&gt;<span class=\"where fmt-newline\">where\n    K: Freeze,</span>",1,["hashbrown::map::VacantEntryRef"]],["impl&lt;'a, K, V, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_map/struct.OccupiedError.html\" title=\"struct hashbrown::hash_map::OccupiedError\">OccupiedError</a>&lt;'a, K, V, S, A&gt;<span class=\"where fmt-newline\">where\n    K: Freeze,\n    V: Freeze,</span>",1,["hashbrown::map::OccupiedError"]],["impl&lt;T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.HashSet.html\" title=\"struct hashbrown::hash_set::HashSet\">HashSet</a>&lt;T, S, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,\n    S: Freeze,</span>",1,["hashbrown::set::HashSet"]],["impl&lt;'a, K&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Iter.html\" title=\"struct hashbrown::hash_set::Iter\">Iter</a>&lt;'a, K&gt;",1,["hashbrown::set::Iter"]],["impl&lt;K, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.IntoIter.html\" title=\"struct hashbrown::hash_set::IntoIter\">IntoIter</a>&lt;K, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["hashbrown::set::IntoIter"]],["impl&lt;'a, K, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Drain.html\" title=\"struct hashbrown::hash_set::Drain\">Drain</a>&lt;'a, K, A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["hashbrown::set::Drain"]],["impl&lt;'a, K, F, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.ExtractIf.html\" title=\"struct hashbrown::hash_set::ExtractIf\">ExtractIf</a>&lt;'a, K, F, A&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,</span>",1,["hashbrown::set::ExtractIf"]],["impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Intersection.html\" title=\"struct hashbrown::hash_set::Intersection\">Intersection</a>&lt;'a, T, S, A&gt;",1,["hashbrown::set::Intersection"]],["impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Difference.html\" title=\"struct hashbrown::hash_set::Difference\">Difference</a>&lt;'a, T, S, A&gt;",1,["hashbrown::set::Difference"]],["impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.SymmetricDifference.html\" title=\"struct hashbrown::hash_set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S, A&gt;",1,["hashbrown::set::SymmetricDifference"]],["impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.Union.html\" title=\"struct hashbrown::hash_set::Union\">Union</a>&lt;'a, T, S, A&gt;",1,["hashbrown::set::Union"]],["impl&lt;'a, T, S, A&gt; Freeze for <a class=\"enum\" href=\"hashbrown/hash_set/enum.Entry.html\" title=\"enum hashbrown::hash_set::Entry\">Entry</a>&lt;'a, T, S, A&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["hashbrown::set::Entry"]],["impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.OccupiedEntry.html\" title=\"struct hashbrown::hash_set::OccupiedEntry\">OccupiedEntry</a>&lt;'a, T, S, A&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["hashbrown::set::OccupiedEntry"]],["impl&lt;'a, T, S, A&gt; Freeze for <a class=\"struct\" href=\"hashbrown/hash_set/struct.VacantEntry.html\" title=\"struct hashbrown::hash_set::VacantEntry\">VacantEntry</a>&lt;'a, T, S, A&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["hashbrown::set::VacantEntry"]],["impl Freeze for <a class=\"enum\" href=\"hashbrown/enum.TryReserveError.html\" title=\"enum hashbrown::TryReserveError\">TryReserveError</a>",1,["hashbrown::TryReserveError"]]],
"ident_case":[["impl Freeze for <a class=\"enum\" href=\"ident_case/enum.RenameRule.html\" title=\"enum ident_case::RenameRule\">RenameRule</a>",1,["ident_case::RenameRule"]]],
"indexmap":[["impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.OccupiedEntry.html\" title=\"struct indexmap::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a, K, V&gt;<span class=\"where fmt-newline\">where\n    K: Freeze,</span>",1,["indexmap::map::core::raw::OccupiedEntry"]],["impl&lt;'a, K, V&gt; Freeze for <a class=\"enum\" href=\"indexmap/map/enum.Entry.html\" title=\"enum indexmap::map::Entry\">Entry</a>&lt;'a, K, V&gt;<span class=\"where fmt-newline\">where\n    K: Freeze,</span>",1,["indexmap::map::core::Entry"]],["impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.VacantEntry.html\" title=\"struct indexmap::map::VacantEntry\">VacantEntry</a>&lt;'a, K, V&gt;<span class=\"where fmt-newline\">where\n    K: Freeze,</span>",1,["indexmap::map::core::VacantEntry"]],["impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Iter.html\" title=\"struct indexmap::map::Iter\">Iter</a>&lt;'a, K, V&gt;",1,["indexmap::map::iter::Iter"]],["impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IterMut.html\" title=\"struct indexmap::map::IterMut\">IterMut</a>&lt;'a, K, V&gt;",1,["indexmap::map::iter::IterMut"]],["impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IntoIter.html\" title=\"struct indexmap::map::IntoIter\">IntoIter</a>&lt;K, V&gt;",1,["indexmap::map::iter::IntoIter"]],["impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Drain.html\" title=\"struct indexmap::map::Drain\">Drain</a>&lt;'a, K, V&gt;",1,["indexmap::map::iter::Drain"]],["impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Keys.html\" title=\"struct indexmap::map::Keys\">Keys</a>&lt;'a, K, V&gt;",1,["indexmap::map::iter::Keys"]],["impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IntoKeys.html\" title=\"struct indexmap::map::IntoKeys\">IntoKeys</a>&lt;K, V&gt;",1,["indexmap::map::iter::IntoKeys"]],["impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Values.html\" title=\"struct indexmap::map::Values\">Values</a>&lt;'a, K, V&gt;",1,["indexmap::map::iter::Values"]],["impl&lt;'a, K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.ValuesMut.html\" title=\"struct indexmap::map::ValuesMut\">ValuesMut</a>&lt;'a, K, V&gt;",1,["indexmap::map::iter::ValuesMut"]],["impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IntoValues.html\" title=\"struct indexmap::map::IntoValues\">IntoValues</a>&lt;K, V&gt;",1,["indexmap::map::iter::IntoValues"]],["impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.Slice.html\" title=\"struct indexmap::map::Slice\">Slice</a>&lt;K, V&gt;<span class=\"where fmt-newline\">where\n    K: Freeze,\n    V: Freeze,</span>",1,["indexmap::map::slice::Slice"]],["impl&lt;K, V, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/map/struct.IndexMap.html\" title=\"struct indexmap::map::IndexMap\">IndexMap</a>&lt;K, V, S&gt;<span class=\"where fmt-newline\">where\n    S: Freeze,</span>",1,["indexmap::map::IndexMap"]],["impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Iter.html\" title=\"struct indexmap::set::Iter\">Iter</a>&lt;'a, T&gt;",1,["indexmap::set::iter::Iter"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.IntoIter.html\" title=\"struct indexmap::set::IntoIter\">IntoIter</a>&lt;T&gt;",1,["indexmap::set::iter::IntoIter"]],["impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Drain.html\" title=\"struct indexmap::set::Drain\">Drain</a>&lt;'a, T&gt;",1,["indexmap::set::iter::Drain"]],["impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Difference.html\" title=\"struct indexmap::set::Difference\">Difference</a>&lt;'a, T, S&gt;",1,["indexmap::set::iter::Difference"]],["impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Intersection.html\" title=\"struct indexmap::set::Intersection\">Intersection</a>&lt;'a, T, S&gt;",1,["indexmap::set::iter::Intersection"]],["impl&lt;'a, T, S1, S2&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.SymmetricDifference.html\" title=\"struct indexmap::set::SymmetricDifference\">SymmetricDifference</a>&lt;'a, T, S1, S2&gt;",1,["indexmap::set::iter::SymmetricDifference"]],["impl&lt;'a, T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Union.html\" title=\"struct indexmap::set::Union\">Union</a>&lt;'a, T, S&gt;",1,["indexmap::set::iter::Union"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.Slice.html\" title=\"struct indexmap::set::Slice\">Slice</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["indexmap::set::slice::Slice"]],["impl&lt;T, S&gt; Freeze for <a class=\"struct\" href=\"indexmap/set/struct.IndexSet.html\" title=\"struct indexmap::set::IndexSet\">IndexSet</a>&lt;T, S&gt;<span class=\"where fmt-newline\">where\n    S: Freeze,</span>",1,["indexmap::set::IndexSet"]],["impl Freeze for <a class=\"struct\" href=\"indexmap/struct.TryReserveError.html\" title=\"struct indexmap::TryReserveError\">TryReserveError</a>",1,["indexmap::TryReserveError"]]],
"itoa":[["impl Freeze for <a class=\"struct\" href=\"itoa/struct.Buffer.html\" title=\"struct itoa::Buffer\">Buffer</a>",1,["itoa::Buffer"]]],
"proc_macro2":[["impl Freeze for <a class=\"struct\" href=\"proc_macro2/extra/struct.DelimSpan.html\" title=\"struct proc_macro2::extra::DelimSpan\">DelimSpan</a>",1,["proc_macro2::extra::DelimSpan"]],["impl Freeze for <a class=\"struct\" href=\"proc_macro2/token_stream/struct.IntoIter.html\" title=\"struct proc_macro2::token_stream::IntoIter\">IntoIter</a>",1,["proc_macro2::token_stream::IntoIter"]],["impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.TokenStream.html\" title=\"struct proc_macro2::TokenStream\">TokenStream</a>",1,["proc_macro2::TokenStream"]],["impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.LexError.html\" title=\"struct proc_macro2::LexError\">LexError</a>",1,["proc_macro2::LexError"]],["impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Span.html\" title=\"struct proc_macro2::Span\">Span</a>",1,["proc_macro2::Span"]],["impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.TokenTree.html\" title=\"enum proc_macro2::TokenTree\">TokenTree</a>",1,["proc_macro2::TokenTree"]],["impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Group.html\" title=\"struct proc_macro2::Group\">Group</a>",1,["proc_macro2::Group"]],["impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Delimiter.html\" title=\"enum proc_macro2::Delimiter\">Delimiter</a>",1,["proc_macro2::Delimiter"]],["impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Punct.html\" title=\"struct proc_macro2::Punct\">Punct</a>",1,["proc_macro2::Punct"]],["impl Freeze for <a class=\"enum\" href=\"proc_macro2/enum.Spacing.html\" title=\"enum proc_macro2::Spacing\">Spacing</a>",1,["proc_macro2::Spacing"]],["impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Ident.html\" title=\"struct proc_macro2::Ident\">Ident</a>",1,["proc_macro2::Ident"]],["impl Freeze for <a class=\"struct\" href=\"proc_macro2/struct.Literal.html\" title=\"struct proc_macro2::Literal\">Literal</a>",1,["proc_macro2::Literal"]]],
"ryu":[["impl Freeze for <a class=\"struct\" href=\"ryu/struct.Buffer.html\" title=\"struct ryu::Buffer\">Buffer</a>",1,["ryu::buffer::Buffer"]]],
"semver":[["impl Freeze for <a class=\"struct\" href=\"semver/struct.Error.html\" title=\"struct semver::Error\">Error</a>",1,["semver::parse::Error"]],["impl Freeze for <a class=\"struct\" href=\"semver/struct.Version.html\" title=\"struct semver::Version\">Version</a>",1,["semver::Version"]],["impl Freeze for <a class=\"struct\" href=\"semver/struct.VersionReq.html\" title=\"struct semver::VersionReq\">VersionReq</a>",1,["semver::VersionReq"]],["impl Freeze for <a class=\"struct\" href=\"semver/struct.Comparator.html\" title=\"struct semver::Comparator\">Comparator</a>",1,["semver::Comparator"]],["impl Freeze for <a class=\"enum\" href=\"semver/enum.Op.html\" title=\"enum semver::Op\">Op</a>",1,["semver::Op"]],["impl Freeze for <a class=\"struct\" href=\"semver/struct.Prerelease.html\" title=\"struct semver::Prerelease\">Prerelease</a>",1,["semver::Prerelease"]],["impl Freeze for <a class=\"struct\" href=\"semver/struct.BuildMetadata.html\" title=\"struct semver::BuildMetadata\">BuildMetadata</a>",1,["semver::BuildMetadata"]]],
"serde":[["impl Freeze for <a class=\"struct\" href=\"serde/de/value/struct.Error.html\" title=\"struct serde::de::value::Error\">Error</a>",1,["serde::de::value::Error"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UnitDeserializer.html\" title=\"struct serde::de::value::UnitDeserializer\">UnitDeserializer</a>&lt;E&gt;",1,["serde::de::value::UnitDeserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BoolDeserializer.html\" title=\"struct serde::de::value::BoolDeserializer\">BoolDeserializer</a>&lt;E&gt;",1,["serde::de::value::BoolDeserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I8Deserializer.html\" title=\"struct serde::de::value::I8Deserializer\">I8Deserializer</a>&lt;E&gt;",1,["serde::de::value::I8Deserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I16Deserializer.html\" title=\"struct serde::de::value::I16Deserializer\">I16Deserializer</a>&lt;E&gt;",1,["serde::de::value::I16Deserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I32Deserializer.html\" title=\"struct serde::de::value::I32Deserializer\">I32Deserializer</a>&lt;E&gt;",1,["serde::de::value::I32Deserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I64Deserializer.html\" title=\"struct serde::de::value::I64Deserializer\">I64Deserializer</a>&lt;E&gt;",1,["serde::de::value::I64Deserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.I128Deserializer.html\" title=\"struct serde::de::value::I128Deserializer\">I128Deserializer</a>&lt;E&gt;",1,["serde::de::value::I128Deserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.IsizeDeserializer.html\" title=\"struct serde::de::value::IsizeDeserializer\">IsizeDeserializer</a>&lt;E&gt;",1,["serde::de::value::IsizeDeserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U8Deserializer.html\" title=\"struct serde::de::value::U8Deserializer\">U8Deserializer</a>&lt;E&gt;",1,["serde::de::value::U8Deserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U16Deserializer.html\" title=\"struct serde::de::value::U16Deserializer\">U16Deserializer</a>&lt;E&gt;",1,["serde::de::value::U16Deserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U64Deserializer.html\" title=\"struct serde::de::value::U64Deserializer\">U64Deserializer</a>&lt;E&gt;",1,["serde::de::value::U64Deserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U128Deserializer.html\" title=\"struct serde::de::value::U128Deserializer\">U128Deserializer</a>&lt;E&gt;",1,["serde::de::value::U128Deserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.UsizeDeserializer.html\" title=\"struct serde::de::value::UsizeDeserializer\">UsizeDeserializer</a>&lt;E&gt;",1,["serde::de::value::UsizeDeserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F32Deserializer.html\" title=\"struct serde::de::value::F32Deserializer\">F32Deserializer</a>&lt;E&gt;",1,["serde::de::value::F32Deserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.F64Deserializer.html\" title=\"struct serde::de::value::F64Deserializer\">F64Deserializer</a>&lt;E&gt;",1,["serde::de::value::F64Deserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CharDeserializer.html\" title=\"struct serde::de::value::CharDeserializer\">CharDeserializer</a>&lt;E&gt;",1,["serde::de::value::CharDeserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.U32Deserializer.html\" title=\"struct serde::de::value::U32Deserializer\">U32Deserializer</a>&lt;E&gt;",1,["serde::de::value::U32Deserializer"]],["impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StrDeserializer.html\" title=\"struct serde::de::value::StrDeserializer\">StrDeserializer</a>&lt;'a, E&gt;",1,["serde::de::value::StrDeserializer"]],["impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedStrDeserializer.html\" title=\"struct serde::de::value::BorrowedStrDeserializer\">BorrowedStrDeserializer</a>&lt;'de, E&gt;",1,["serde::de::value::BorrowedStrDeserializer"]],["impl&lt;E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.StringDeserializer.html\" title=\"struct serde::de::value::StringDeserializer\">StringDeserializer</a>&lt;E&gt;",1,["serde::de::value::StringDeserializer"]],["impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.CowStrDeserializer.html\" title=\"struct serde::de::value::CowStrDeserializer\">CowStrDeserializer</a>&lt;'a, E&gt;",1,["serde::de::value::CowStrDeserializer"]],["impl&lt;'a, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BytesDeserializer.html\" title=\"struct serde::de::value::BytesDeserializer\">BytesDeserializer</a>&lt;'a, E&gt;",1,["serde::de::value::BytesDeserializer"]],["impl&lt;'de, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.BorrowedBytesDeserializer.html\" title=\"struct serde::de::value::BorrowedBytesDeserializer\">BorrowedBytesDeserializer</a>&lt;'de, E&gt;",1,["serde::de::value::BorrowedBytesDeserializer"]],["impl&lt;I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqDeserializer.html\" title=\"struct serde::de::value::SeqDeserializer\">SeqDeserializer</a>&lt;I, E&gt;<span class=\"where fmt-newline\">where\n    I: Freeze,</span>",1,["serde::de::value::SeqDeserializer"]],["impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.SeqAccessDeserializer.html\" title=\"struct serde::de::value::SeqAccessDeserializer\">SeqAccessDeserializer</a>&lt;A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["serde::de::value::SeqAccessDeserializer"]],["impl&lt;'de, I, E&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapDeserializer.html\" title=\"struct serde::de::value::MapDeserializer\">MapDeserializer</a>&lt;'de, I, E&gt;<span class=\"where fmt-newline\">where\n    I: Freeze,\n    &lt;&lt;I as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.70.0/core/iter/traits/iterator/trait.Iterator.html#associatedtype.Item\" title=\"type core::iter::traits::iterator::Iterator::Item\">Item</a> as Pair&gt;::Second: Freeze,</span>",1,["serde::de::value::MapDeserializer"]],["impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.MapAccessDeserializer.html\" title=\"struct serde::de::value::MapAccessDeserializer\">MapAccessDeserializer</a>&lt;A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["serde::de::value::MapAccessDeserializer"]],["impl&lt;A&gt; Freeze for <a class=\"struct\" href=\"serde/de/value/struct.EnumAccessDeserializer.html\" title=\"struct serde::de::value::EnumAccessDeserializer\">EnumAccessDeserializer</a>&lt;A&gt;<span class=\"where fmt-newline\">where\n    A: Freeze,</span>",1,["serde::de::value::EnumAccessDeserializer"]],["impl Freeze for <a class=\"struct\" href=\"serde/de/struct.IgnoredAny.html\" title=\"struct serde::de::IgnoredAny\">IgnoredAny</a>",1,["serde::de::ignored_any::IgnoredAny"]],["impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde/de/enum.Unexpected.html\" title=\"enum serde::de::Unexpected\">Unexpected</a>&lt;'a&gt;",1,["serde::de::Unexpected"]],["impl&lt;Ok, Error&gt; Freeze for <a class=\"struct\" href=\"serde/ser/struct.Impossible.html\" title=\"struct serde::ser::Impossible\">Impossible</a>&lt;Ok, Error&gt;",1,["serde::ser::impossible::Impossible"]]],
"serde_cbor":[["impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_cbor/de/struct.IoRead.html\" title=\"struct serde_cbor::de::IoRead\">IoRead</a>&lt;R&gt;<span class=\"where fmt-newline\">where\n    R: Freeze,</span>",1,["serde_cbor::read::IoRead"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_cbor/de/struct.SliceRead.html\" title=\"struct serde_cbor::de::SliceRead\">SliceRead</a>&lt;'a&gt;",1,["serde_cbor::read::SliceRead"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_cbor/de/struct.MutSliceRead.html\" title=\"struct serde_cbor::de::MutSliceRead\">MutSliceRead</a>&lt;'a&gt;",1,["serde_cbor::read::MutSliceRead"]],["impl&lt;'a, 'b&gt; Freeze for <a class=\"struct\" href=\"serde_cbor/de/struct.SliceReadFixed.html\" title=\"struct serde_cbor::de::SliceReadFixed\">SliceReadFixed</a>&lt;'a, 'b&gt;",1,["serde_cbor::read::SliceReadFixed"]],["impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_cbor/struct.Deserializer.html\" title=\"struct serde_cbor::Deserializer\">Deserializer</a>&lt;R&gt;<span class=\"where fmt-newline\">where\n    R: Freeze,</span>",1,["serde_cbor::de::Deserializer"]],["impl&lt;'de, R, T&gt; Freeze for <a class=\"struct\" href=\"serde_cbor/struct.StreamDeserializer.html\" title=\"struct serde_cbor::StreamDeserializer\">StreamDeserializer</a>&lt;'de, R, T&gt;<span class=\"where fmt-newline\">where\n    R: Freeze,</span>",1,["serde_cbor::de::StreamDeserializer"]],["impl Freeze for <a class=\"struct\" href=\"serde_cbor/struct.Error.html\" title=\"struct serde_cbor::Error\">Error</a>",1,["serde_cbor::error::Error"]],["impl Freeze for <a class=\"enum\" href=\"serde_cbor/error/enum.Category.html\" title=\"enum serde_cbor::error::Category\">Category</a>",1,["serde_cbor::error::Category"]],["impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"serde_cbor/ser/struct.IoWrite.html\" title=\"struct serde_cbor::ser::IoWrite\">IoWrite</a>&lt;W&gt;<span class=\"where fmt-newline\">where\n    W: Freeze,</span>",1,["serde_cbor::write::IoWrite"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_cbor/ser/struct.SliceWrite.html\" title=\"struct serde_cbor::ser::SliceWrite\">SliceWrite</a>&lt;'a&gt;",1,["serde_cbor::write::SliceWrite"]],["impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"serde_cbor/struct.Serializer.html\" title=\"struct serde_cbor::Serializer\">Serializer</a>&lt;W&gt;<span class=\"where fmt-newline\">where\n    W: Freeze,</span>",1,["serde_cbor::ser::Serializer"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"serde_cbor/tags/struct.Tagged.html\" title=\"struct serde_cbor::tags::Tagged\">Tagged</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["serde_cbor::tags::Tagged"]],["impl Freeze for <a class=\"enum\" href=\"serde_cbor/enum.Value.html\" title=\"enum serde_cbor::Value\">Value</a>",1,["serde_cbor::value::Value"]]],
"serde_json":[["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.SliceRead.html\" title=\"struct serde_json::de::SliceRead\">SliceRead</a>&lt;'a&gt;",1,["serde_json::read::SliceRead"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.StrRead.html\" title=\"struct serde_json::de::StrRead\">StrRead</a>&lt;'a&gt;",1,["serde_json::read::StrRead"]],["impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_json/de/struct.IoRead.html\" title=\"struct serde_json::de::IoRead\">IoRead</a>&lt;R&gt;<span class=\"where fmt-newline\">where\n    R: Freeze,</span>",1,["serde_json::read::IoRead"]],["impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.Deserializer.html\" title=\"struct serde_json::Deserializer\">Deserializer</a>&lt;R&gt;<span class=\"where fmt-newline\">where\n    R: Freeze,</span>",1,["serde_json::de::Deserializer"]],["impl&lt;'de, R, T&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.StreamDeserializer.html\" title=\"struct serde_json::StreamDeserializer\">StreamDeserializer</a>&lt;'de, R, T&gt;<span class=\"where fmt-newline\">where\n    R: Freeze,</span>",1,["serde_json::de::StreamDeserializer"]],["impl Freeze for <a class=\"struct\" href=\"serde_json/struct.Error.html\" title=\"struct serde_json::Error\">Error</a>",1,["serde_json::error::Error"]],["impl Freeze for <a class=\"enum\" href=\"serde_json/error/enum.Category.html\" title=\"enum serde_json::error::Category\">Category</a>",1,["serde_json::error::Category"]],["impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.Map.html\" title=\"struct serde_json::Map\">Map</a>&lt;K, V&gt;",1,["serde_json::map::Map"]],["impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde_json/map/enum.Entry.html\" title=\"enum serde_json::map::Entry\">Entry</a>&lt;'a&gt;",1,["serde_json::map::Entry"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.VacantEntry.html\" title=\"struct serde_json::map::VacantEntry\">VacantEntry</a>&lt;'a&gt;",1,["serde_json::map::VacantEntry"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.OccupiedEntry.html\" title=\"struct serde_json::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;",1,["serde_json::map::OccupiedEntry"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Iter.html\" title=\"struct serde_json::map::Iter\">Iter</a>&lt;'a&gt;",1,["serde_json::map::Iter"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.IterMut.html\" title=\"struct serde_json::map::IterMut\">IterMut</a>&lt;'a&gt;",1,["serde_json::map::IterMut"]],["impl Freeze for <a class=\"struct\" href=\"serde_json/map/struct.IntoIter.html\" title=\"struct serde_json::map::IntoIter\">IntoIter</a>",1,["serde_json::map::IntoIter"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Keys.html\" title=\"struct serde_json::map::Keys\">Keys</a>&lt;'a&gt;",1,["serde_json::map::Keys"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.Values.html\" title=\"struct serde_json::map::Values\">Values</a>&lt;'a&gt;",1,["serde_json::map::Values"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/map/struct.ValuesMut.html\" title=\"struct serde_json::map::ValuesMut\">ValuesMut</a>&lt;'a&gt;",1,["serde_json::map::ValuesMut"]],["impl&lt;W, F&gt; Freeze for <a class=\"struct\" href=\"serde_json/struct.Serializer.html\" title=\"struct serde_json::Serializer\">Serializer</a>&lt;W, F&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,\n    W: Freeze,</span>",1,["serde_json::ser::Serializer"]],["impl Freeze for <a class=\"enum\" href=\"serde_json/ser/enum.CharEscape.html\" title=\"enum serde_json::ser::CharEscape\">CharEscape</a>",1,["serde_json::ser::CharEscape"]],["impl Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.CompactFormatter.html\" title=\"struct serde_json::ser::CompactFormatter\">CompactFormatter</a>",1,["serde_json::ser::CompactFormatter"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_json/ser/struct.PrettyFormatter.html\" title=\"struct serde_json::ser::PrettyFormatter\">PrettyFormatter</a>&lt;'a&gt;",1,["serde_json::ser::PrettyFormatter"]],["impl Freeze for <a class=\"struct\" href=\"serde_json/value/struct.Serializer.html\" title=\"struct serde_json::value::Serializer\">Serializer</a>",1,["serde_json::value::ser::Serializer"]],["impl Freeze for <a class=\"struct\" href=\"serde_json/value/struct.Number.html\" title=\"struct serde_json::value::Number\">Number</a>",1,["serde_json::number::Number"]],["impl Freeze for <a class=\"enum\" href=\"serde_json/enum.Value.html\" title=\"enum serde_json::Value\">Value</a>",1,["serde_json::value::Value"]]],
"serde_spanned":[["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"serde_spanned/struct.Spanned.html\" title=\"struct serde_spanned::Spanned\">Spanned</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["serde_spanned::spanned::Spanned"]]],
"serde_yaml":[["impl&lt;'de&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/struct.Deserializer.html\" title=\"struct serde_yaml::Deserializer\">Deserializer</a>&lt;'de&gt;",1,["serde_yaml::de::Deserializer"]],["impl Freeze for <a class=\"struct\" href=\"serde_yaml/struct.Error.html\" title=\"struct serde_yaml::Error\">Error</a>",1,["serde_yaml::error::Error"]],["impl Freeze for <a class=\"struct\" href=\"serde_yaml/struct.Location.html\" title=\"struct serde_yaml::Location\">Location</a>",1,["serde_yaml::error::Location"]],["impl Freeze for <a class=\"struct\" href=\"serde_yaml/struct.Mapping.html\" title=\"struct serde_yaml::Mapping\">Mapping</a>",1,["serde_yaml::mapping::Mapping"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.Iter.html\" title=\"struct serde_yaml::mapping::Iter\">Iter</a>&lt;'a&gt;",1,["serde_yaml::mapping::Iter"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.IterMut.html\" title=\"struct serde_yaml::mapping::IterMut\">IterMut</a>&lt;'a&gt;",1,["serde_yaml::mapping::IterMut"]],["impl Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.IntoIter.html\" title=\"struct serde_yaml::mapping::IntoIter\">IntoIter</a>",1,["serde_yaml::mapping::IntoIter"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.Keys.html\" title=\"struct serde_yaml::mapping::Keys\">Keys</a>&lt;'a&gt;",1,["serde_yaml::mapping::Keys"]],["impl Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.IntoKeys.html\" title=\"struct serde_yaml::mapping::IntoKeys\">IntoKeys</a>",1,["serde_yaml::mapping::IntoKeys"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.Values.html\" title=\"struct serde_yaml::mapping::Values\">Values</a>&lt;'a&gt;",1,["serde_yaml::mapping::Values"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.ValuesMut.html\" title=\"struct serde_yaml::mapping::ValuesMut\">ValuesMut</a>&lt;'a&gt;",1,["serde_yaml::mapping::ValuesMut"]],["impl Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.IntoValues.html\" title=\"struct serde_yaml::mapping::IntoValues\">IntoValues</a>",1,["serde_yaml::mapping::IntoValues"]],["impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"serde_yaml/mapping/enum.Entry.html\" title=\"enum serde_yaml::mapping::Entry\">Entry</a>&lt;'a&gt;",1,["serde_yaml::mapping::Entry"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.OccupiedEntry.html\" title=\"struct serde_yaml::mapping::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;",1,["serde_yaml::mapping::OccupiedEntry"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/mapping/struct.VacantEntry.html\" title=\"struct serde_yaml::mapping::VacantEntry\">VacantEntry</a>&lt;'a&gt;",1,["serde_yaml::mapping::VacantEntry"]],["impl Freeze for <a class=\"struct\" href=\"serde_yaml/value/struct.Number.html\" title=\"struct serde_yaml::value::Number\">Number</a>",1,["serde_yaml::number::Number"]],["impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"serde_yaml/struct.Serializer.html\" title=\"struct serde_yaml::Serializer\">Serializer</a>&lt;W&gt;",1,["serde_yaml::ser::Serializer"]],["impl Freeze for <a class=\"struct\" href=\"serde_yaml/value/struct.Serializer.html\" title=\"struct serde_yaml::value::Serializer\">Serializer</a>",1,["serde_yaml::value::ser::Serializer"]],["impl Freeze for <a class=\"struct\" href=\"serde_yaml/value/struct.Tag.html\" title=\"struct serde_yaml::value::Tag\">Tag</a>",1,["serde_yaml::value::tagged::Tag"]],["impl Freeze for <a class=\"struct\" href=\"serde_yaml/value/struct.TaggedValue.html\" title=\"struct serde_yaml::value::TaggedValue\">TaggedValue</a>",1,["serde_yaml::value::tagged::TaggedValue"]],["impl Freeze for <a class=\"enum\" href=\"serde_yaml/enum.Value.html\" title=\"enum serde_yaml::Value\">Value</a>",1,["serde_yaml::value::Value"]]],
"strsim":[["impl Freeze for <a class=\"enum\" href=\"strsim/enum.StrSimError.html\" title=\"enum strsim::StrSimError\">StrSimError</a>",1,["strsim::StrSimError"]]],
"toml":[["impl&lt;K, V&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Map.html\" title=\"struct toml::map::Map\">Map</a>&lt;K, V&gt;",1,["toml::map::Map"]],["impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"toml/map/enum.Entry.html\" title=\"enum toml::map::Entry\">Entry</a>&lt;'a&gt;",1,["toml::map::Entry"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.VacantEntry.html\" title=\"struct toml::map::VacantEntry\">VacantEntry</a>&lt;'a&gt;",1,["toml::map::VacantEntry"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.OccupiedEntry.html\" title=\"struct toml::map::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;",1,["toml::map::OccupiedEntry"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Iter.html\" title=\"struct toml::map::Iter\">Iter</a>&lt;'a&gt;",1,["toml::map::Iter"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.IterMut.html\" title=\"struct toml::map::IterMut\">IterMut</a>&lt;'a&gt;",1,["toml::map::IterMut"]],["impl Freeze for <a class=\"struct\" href=\"toml/map/struct.IntoIter.html\" title=\"struct toml::map::IntoIter\">IntoIter</a>",1,["toml::map::IntoIter"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Keys.html\" title=\"struct toml::map::Keys\">Keys</a>&lt;'a&gt;",1,["toml::map::Keys"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/map/struct.Values.html\" title=\"struct toml::map::Values\">Values</a>&lt;'a&gt;",1,["toml::map::Values"]],["impl Freeze for <a class=\"enum\" href=\"toml/enum.Value.html\" title=\"enum toml::Value\">Value</a>",1,["toml::value::Value"]],["impl Freeze for <a class=\"struct\" href=\"toml/de/struct.Error.html\" title=\"struct toml::de::Error\">Error</a>",1,["toml::de::Error"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/struct.Deserializer.html\" title=\"struct toml::Deserializer\">Deserializer</a>&lt;'a&gt;",1,["toml::de::Deserializer"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml/de/struct.ValueDeserializer.html\" title=\"struct toml::de::ValueDeserializer\">ValueDeserializer</a>&lt;'a&gt;",1,["toml::de::ValueDeserializer"]],["impl Freeze for <a class=\"struct\" href=\"toml/ser/struct.Error.html\" title=\"struct toml::ser::Error\">Error</a>",1,["toml::ser::Error"]],["impl&lt;'d&gt; Freeze for <a class=\"struct\" href=\"toml/struct.Serializer.html\" title=\"struct toml::Serializer\">Serializer</a>&lt;'d&gt;",1,["toml::ser::Serializer"]],["impl&lt;'d&gt; Freeze for <a class=\"struct\" href=\"toml/ser/struct.ValueSerializer.html\" title=\"struct toml::ser::ValueSerializer\">ValueSerializer</a>&lt;'d&gt;",1,["toml::ser::ValueSerializer"]]],
"toml_datetime":[["impl Freeze for <a class=\"struct\" href=\"toml_datetime/struct.Datetime.html\" title=\"struct toml_datetime::Datetime\">Datetime</a>",1,["toml_datetime::datetime::Datetime"]],["impl Freeze for <a class=\"struct\" href=\"toml_datetime/struct.DatetimeParseError.html\" title=\"struct toml_datetime::DatetimeParseError\">DatetimeParseError</a>",1,["toml_datetime::datetime::DatetimeParseError"]],["impl Freeze for <a class=\"struct\" href=\"toml_datetime/struct.Date.html\" title=\"struct toml_datetime::Date\">Date</a>",1,["toml_datetime::datetime::Date"]],["impl Freeze for <a class=\"struct\" href=\"toml_datetime/struct.Time.html\" title=\"struct toml_datetime::Time\">Time</a>",1,["toml_datetime::datetime::Time"]],["impl Freeze for <a class=\"enum\" href=\"toml_datetime/enum.Offset.html\" title=\"enum toml_datetime::Offset\">Offset</a>",1,["toml_datetime::datetime::Offset"]]],
"toml_edit":[["impl Freeze for <a class=\"struct\" href=\"toml_edit/struct.Array.html\" title=\"struct toml_edit::Array\">Array</a>",1,["toml_edit::array::Array"]],["impl Freeze for <a class=\"struct\" href=\"toml_edit/struct.ArrayOfTables.html\" title=\"struct toml_edit::ArrayOfTables\">ArrayOfTables</a>",1,["toml_edit::array_of_tables::ArrayOfTables"]],["impl Freeze for <a class=\"struct\" href=\"toml_edit/struct.Document.html\" title=\"struct toml_edit::Document\">Document</a>",1,["toml_edit::document::Document"]],["impl Freeze for <a class=\"struct\" href=\"toml_edit/struct.InlineTable.html\" title=\"struct toml_edit::InlineTable\">InlineTable</a>",1,["toml_edit::inline_table::InlineTable"]],["impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"toml_edit/enum.InlineEntry.html\" title=\"enum toml_edit::InlineEntry\">InlineEntry</a>&lt;'a&gt;",1,["toml_edit::inline_table::InlineEntry"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml_edit/struct.InlineOccupiedEntry.html\" title=\"struct toml_edit::InlineOccupiedEntry\">InlineOccupiedEntry</a>&lt;'a&gt;",1,["toml_edit::inline_table::InlineOccupiedEntry"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml_edit/struct.InlineVacantEntry.html\" title=\"struct toml_edit::InlineVacantEntry\">InlineVacantEntry</a>&lt;'a&gt;",1,["toml_edit::inline_table::InlineVacantEntry"]],["impl Freeze for <a class=\"struct\" href=\"toml_edit/struct.InternalString.html\" title=\"struct toml_edit::InternalString\">InternalString</a>",1,["toml_edit::internal_string::InternalString"]],["impl Freeze for <a class=\"enum\" href=\"toml_edit/enum.Item.html\" title=\"enum toml_edit::Item\">Item</a>",1,["toml_edit::item::Item"]],["impl Freeze for <a class=\"struct\" href=\"toml_edit/struct.Key.html\" title=\"struct toml_edit::Key\">Key</a>",1,["toml_edit::key::Key"]],["impl&lt;'k&gt; Freeze for <a class=\"struct\" href=\"toml_edit/struct.KeyMut.html\" title=\"struct toml_edit::KeyMut\">KeyMut</a>&lt;'k&gt;",1,["toml_edit::key::KeyMut"]],["impl Freeze for <a class=\"struct\" href=\"toml_edit/struct.TomlError.html\" title=\"struct toml_edit::TomlError\">TomlError</a>",1,["toml_edit::parser::errors::TomlError"]],["impl Freeze for <a class=\"struct\" href=\"toml_edit/struct.RawString.html\" title=\"struct toml_edit::RawString\">RawString</a>",1,["toml_edit::raw_string::RawString"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"toml_edit/struct.Formatted.html\" title=\"struct toml_edit::Formatted\">Formatted</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["toml_edit::repr::Formatted"]],["impl Freeze for <a class=\"struct\" href=\"toml_edit/struct.Repr.html\" title=\"struct toml_edit::Repr\">Repr</a>",1,["toml_edit::repr::Repr"]],["impl Freeze for <a class=\"struct\" href=\"toml_edit/struct.Decor.html\" title=\"struct toml_edit::Decor\">Decor</a>",1,["toml_edit::repr::Decor"]],["impl Freeze for <a class=\"struct\" href=\"toml_edit/struct.Table.html\" title=\"struct toml_edit::Table\">Table</a>",1,["toml_edit::table::Table"]],["impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"toml_edit/enum.Entry.html\" title=\"enum toml_edit::Entry\">Entry</a>&lt;'a&gt;",1,["toml_edit::table::Entry"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml_edit/struct.OccupiedEntry.html\" title=\"struct toml_edit::OccupiedEntry\">OccupiedEntry</a>&lt;'a&gt;",1,["toml_edit::table::OccupiedEntry"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"toml_edit/struct.VacantEntry.html\" title=\"struct toml_edit::VacantEntry\">VacantEntry</a>&lt;'a&gt;",1,["toml_edit::table::VacantEntry"]],["impl Freeze for <a class=\"enum\" href=\"toml_edit/enum.Value.html\" title=\"enum toml_edit::Value\">Value</a>",1,["toml_edit::value::Value"]],["impl Freeze for <a class=\"struct\" href=\"toml_edit/de/struct.ValueDeserializer.html\" title=\"struct toml_edit::de::ValueDeserializer\">ValueDeserializer</a>",1,["toml_edit::de::value::ValueDeserializer"]],["impl Freeze for <a class=\"struct\" href=\"toml_edit/de/struct.Error.html\" title=\"struct toml_edit::de::Error\">Error</a>",1,["toml_edit::de::Error"]],["impl Freeze for <a class=\"struct\" href=\"toml_edit/de/struct.Deserializer.html\" title=\"struct toml_edit::de::Deserializer\">Deserializer</a>",1,["toml_edit::de::Deserializer"]],["impl Freeze for <a class=\"struct\" href=\"toml_edit/ser/struct.ValueSerializer.html\" title=\"struct toml_edit::ser::ValueSerializer\">ValueSerializer</a>",1,["toml_edit::ser::value::ValueSerializer"]],["impl Freeze for <a class=\"enum\" href=\"toml_edit/ser/enum.Error.html\" title=\"enum toml_edit::ser::Error\">Error</a>",1,["toml_edit::ser::Error"]]],
"unsafe_libyaml":[["impl Freeze for <a class=\"struct\" href=\"unsafe_libyaml/struct.yaml_version_directive_t.html\" title=\"struct unsafe_libyaml::yaml_version_directive_t\">yaml_version_directive_t</a>",1,["unsafe_libyaml::yaml::yaml_version_directive_t"]],["impl Freeze for <a class=\"struct\" href=\"unsafe_libyaml/struct.yaml_tag_directive_t.html\" title=\"struct unsafe_libyaml::yaml_tag_directive_t\">yaml_tag_directive_t</a>",1,["unsafe_libyaml::yaml::yaml_tag_directive_t"]],["impl Freeze for <a class=\"enum\" href=\"unsafe_libyaml/enum.yaml_encoding_t.html\" title=\"enum unsafe_libyaml::yaml_encoding_t\">yaml_encoding_t</a>",1,["unsafe_libyaml::yaml::yaml_encoding_t"]],["impl Freeze for <a class=\"enum\" href=\"unsafe_libyaml/enum.yaml_break_t.html\" title=\"enum unsafe_libyaml::yaml_break_t\">yaml_break_t</a>",1,["unsafe_libyaml::yaml::yaml_break_t"]],["impl Freeze for <a class=\"enum\" href=\"unsafe_libyaml/enum.yaml_error_type_t.html\" title=\"enum unsafe_libyaml::yaml_error_type_t\">yaml_error_type_t</a>",1,["unsafe_libyaml::yaml::yaml_error_type_t"]],["impl Freeze for <a class=\"struct\" href=\"unsafe_libyaml/struct.yaml_mark_t.html\" title=\"struct unsafe_libyaml::yaml_mark_t\">yaml_mark_t</a>",1,["unsafe_libyaml::yaml::yaml_mark_t"]],["impl Freeze for <a class=\"enum\" href=\"unsafe_libyaml/enum.yaml_scalar_style_t.html\" title=\"enum unsafe_libyaml::yaml_scalar_style_t\">yaml_scalar_style_t</a>",1,["unsafe_libyaml::yaml::yaml_scalar_style_t"]],["impl Freeze for <a class=\"enum\" href=\"unsafe_libyaml/enum.yaml_sequence_style_t.html\" title=\"enum unsafe_libyaml::yaml_sequence_style_t\">yaml_sequence_style_t</a>",1,["unsafe_libyaml::yaml::yaml_sequence_style_t"]],["impl Freeze for <a class=\"enum\" href=\"unsafe_libyaml/enum.yaml_mapping_style_t.html\" title=\"enum unsafe_libyaml::yaml_mapping_style_t\">yaml_mapping_style_t</a>",1,["unsafe_libyaml::yaml::yaml_mapping_style_t"]],["impl Freeze for <a class=\"enum\" href=\"unsafe_libyaml/enum.yaml_token_type_t.html\" title=\"enum unsafe_libyaml::yaml_token_type_t\">yaml_token_type_t</a>",1,["unsafe_libyaml::yaml::yaml_token_type_t"]],["impl Freeze for <a class=\"struct\" href=\"unsafe_libyaml/struct.yaml_token_t.html\" title=\"struct unsafe_libyaml::yaml_token_t\">yaml_token_t</a>",1,["unsafe_libyaml::yaml::yaml_token_t"]],["impl Freeze for <a class=\"enum\" href=\"unsafe_libyaml/enum.yaml_event_type_t.html\" title=\"enum unsafe_libyaml::yaml_event_type_t\">yaml_event_type_t</a>",1,["unsafe_libyaml::yaml::yaml_event_type_t"]],["impl Freeze for <a class=\"struct\" href=\"unsafe_libyaml/struct.yaml_event_t.html\" title=\"struct unsafe_libyaml::yaml_event_t\">yaml_event_t</a>",1,["unsafe_libyaml::yaml::yaml_event_t"]],["impl Freeze for <a class=\"enum\" href=\"unsafe_libyaml/enum.yaml_node_type_t.html\" title=\"enum unsafe_libyaml::yaml_node_type_t\">yaml_node_type_t</a>",1,["unsafe_libyaml::yaml::yaml_node_type_t"]],["impl Freeze for <a class=\"struct\" href=\"unsafe_libyaml/struct.yaml_node_t.html\" title=\"struct unsafe_libyaml::yaml_node_t\">yaml_node_t</a>",1,["unsafe_libyaml::yaml::yaml_node_t"]],["impl Freeze for <a class=\"struct\" href=\"unsafe_libyaml/struct.yaml_node_pair_t.html\" title=\"struct unsafe_libyaml::yaml_node_pair_t\">yaml_node_pair_t</a>",1,["unsafe_libyaml::yaml::yaml_node_pair_t"]],["impl Freeze for <a class=\"struct\" href=\"unsafe_libyaml/struct.yaml_document_t.html\" title=\"struct unsafe_libyaml::yaml_document_t\">yaml_document_t</a>",1,["unsafe_libyaml::yaml::yaml_document_t"]],["impl Freeze for <a class=\"struct\" href=\"unsafe_libyaml/struct.yaml_simple_key_t.html\" title=\"struct unsafe_libyaml::yaml_simple_key_t\">yaml_simple_key_t</a>",1,["unsafe_libyaml::yaml::yaml_simple_key_t"]],["impl Freeze for <a class=\"enum\" href=\"unsafe_libyaml/enum.yaml_parser_state_t.html\" title=\"enum unsafe_libyaml::yaml_parser_state_t\">yaml_parser_state_t</a>",1,["unsafe_libyaml::yaml::yaml_parser_state_t"]],["impl Freeze for <a class=\"struct\" href=\"unsafe_libyaml/struct.yaml_alias_data_t.html\" title=\"struct unsafe_libyaml::yaml_alias_data_t\">yaml_alias_data_t</a>",1,["unsafe_libyaml::yaml::yaml_alias_data_t"]],["impl Freeze for <a class=\"struct\" href=\"unsafe_libyaml/struct.yaml_parser_t.html\" title=\"struct unsafe_libyaml::yaml_parser_t\">yaml_parser_t</a>",1,["unsafe_libyaml::yaml::yaml_parser_t"]],["impl Freeze for <a class=\"enum\" href=\"unsafe_libyaml/enum.yaml_emitter_state_t.html\" title=\"enum unsafe_libyaml::yaml_emitter_state_t\">yaml_emitter_state_t</a>",1,["unsafe_libyaml::yaml::yaml_emitter_state_t"]],["impl Freeze for <a class=\"struct\" href=\"unsafe_libyaml/struct.yaml_emitter_t.html\" title=\"struct unsafe_libyaml::yaml_emitter_t\">yaml_emitter_t</a>",1,["unsafe_libyaml::yaml::yaml_emitter_t"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"unsafe_libyaml/struct.yaml_stack_t.html\" title=\"struct unsafe_libyaml::yaml_stack_t\">yaml_stack_t</a>&lt;T&gt;",1,["unsafe_libyaml::yaml::yaml_stack_t"]]],
"wasmer_toml":[["impl Freeze for <a class=\"struct\" href=\"wasmer_toml/rust/struct.Wasmer.html\" title=\"struct wasmer_toml::rust::Wasmer\">Wasmer</a>",1,["wasmer_toml::rust::Wasmer"]],["impl Freeze for <a class=\"enum\" href=\"wasmer_toml/enum.Abi.html\" title=\"enum wasmer_toml::Abi\">Abi</a>",1,["wasmer_toml::Abi"]],["impl Freeze for <a class=\"struct\" href=\"wasmer_toml/struct.Package.html\" title=\"struct wasmer_toml::Package\">Package</a>",1,["wasmer_toml::Package"]],["impl Freeze for <a class=\"struct\" href=\"wasmer_toml/struct.PackageBuilder.html\" title=\"struct wasmer_toml::PackageBuilder\">PackageBuilder</a>",1,["wasmer_toml::PackageBuilder"]],["impl Freeze for <a class=\"enum\" href=\"wasmer_toml/enum.PackageBuilderError.html\" title=\"enum wasmer_toml::PackageBuilderError\">PackageBuilderError</a>",1,["wasmer_toml::PackageBuilderError"]],["impl Freeze for <a class=\"enum\" href=\"wasmer_toml/enum.Command.html\" title=\"enum wasmer_toml::Command\">Command</a>",1,["wasmer_toml::Command"]],["impl Freeze for <a class=\"struct\" href=\"wasmer_toml/struct.CommandV1.html\" title=\"struct wasmer_toml::CommandV1\">CommandV1</a>",1,["wasmer_toml::CommandV1"]],["impl Freeze for <a class=\"struct\" href=\"wasmer_toml/struct.CommandV2.html\" title=\"struct wasmer_toml::CommandV2\">CommandV2</a>",1,["wasmer_toml::CommandV2"]],["impl Freeze for <a class=\"enum\" href=\"wasmer_toml/enum.ModuleReference.html\" title=\"enum wasmer_toml::ModuleReference\">ModuleReference</a>",1,["wasmer_toml::ModuleReference"]],["impl Freeze for <a class=\"enum\" href=\"wasmer_toml/enum.CommandAnnotations.html\" title=\"enum wasmer_toml::CommandAnnotations\">CommandAnnotations</a>",1,["wasmer_toml::CommandAnnotations"]],["impl Freeze for <a class=\"struct\" href=\"wasmer_toml/struct.FileCommandAnnotations.html\" title=\"struct wasmer_toml::FileCommandAnnotations\">FileCommandAnnotations</a>",1,["wasmer_toml::FileCommandAnnotations"]],["impl Freeze for <a class=\"enum\" href=\"wasmer_toml/enum.FileKind.html\" title=\"enum wasmer_toml::FileKind\">FileKind</a>",1,["wasmer_toml::FileKind"]],["impl Freeze for <a class=\"struct\" href=\"wasmer_toml/struct.Module.html\" title=\"struct wasmer_toml::Module\">Module</a>",1,["wasmer_toml::Module"]],["impl Freeze for <a class=\"enum\" href=\"wasmer_toml/enum.Bindings.html\" title=\"enum wasmer_toml::Bindings\">Bindings</a>",1,["wasmer_toml::Bindings"]],["impl Freeze for <a class=\"struct\" href=\"wasmer_toml/struct.WitBindings.html\" title=\"struct wasmer_toml::WitBindings\">WitBindings</a>",1,["wasmer_toml::WitBindings"]],["impl Freeze for <a class=\"struct\" href=\"wasmer_toml/struct.WaiBindings.html\" title=\"struct wasmer_toml::WaiBindings\">WaiBindings</a>",1,["wasmer_toml::WaiBindings"]],["impl Freeze for <a class=\"enum\" href=\"wasmer_toml/enum.ImportsError.html\" title=\"enum wasmer_toml::ImportsError\">ImportsError</a>",1,["wasmer_toml::ImportsError"]],["impl Freeze for <a class=\"struct\" href=\"wasmer_toml/struct.Manifest.html\" title=\"struct wasmer_toml::Manifest\">Manifest</a>",1,["wasmer_toml::Manifest"]],["impl Freeze for <a class=\"struct\" href=\"wasmer_toml/struct.ManifestBuilder.html\" title=\"struct wasmer_toml::ManifestBuilder\">ManifestBuilder</a>",1,["wasmer_toml::ManifestBuilder"]],["impl Freeze for <a class=\"enum\" href=\"wasmer_toml/enum.ManifestBuilderError.html\" title=\"enum wasmer_toml::ManifestBuilderError\">ManifestBuilderError</a>",1,["wasmer_toml::ManifestBuilderError"]],["impl Freeze for <a class=\"enum\" href=\"wasmer_toml/enum.ManifestError.html\" title=\"enum wasmer_toml::ManifestError\">ManifestError</a>",1,["wasmer_toml::ManifestError"]],["impl Freeze for <a class=\"enum\" href=\"wasmer_toml/enum.ValidationError.html\" title=\"enum wasmer_toml::ValidationError\">ValidationError</a>",1,["wasmer_toml::ValidationError"]]],
"winnow":[["impl Freeze for <a class=\"enum\" href=\"winnow/error/enum.Needed.html\" title=\"enum winnow::error::Needed\">Needed</a>",1,["winnow::error::Needed"]],["impl&lt;E&gt; Freeze for <a class=\"enum\" href=\"winnow/error/enum.ErrMode.html\" title=\"enum winnow::error::ErrMode\">ErrMode</a>&lt;E&gt;<span class=\"where fmt-newline\">where\n    E: Freeze,</span>",1,["winnow::error::ErrMode"]],["impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"winnow/error/struct.InputError.html\" title=\"struct winnow::error::InputError\">InputError</a>&lt;I&gt;<span class=\"where fmt-newline\">where\n    I: Freeze,</span>",1,["winnow::error::InputError"]],["impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"winnow/error/struct.ContextError.html\" title=\"struct winnow::error::ContextError\">ContextError</a>&lt;C&gt;",1,["winnow::error::ContextError"]],["impl Freeze for <a class=\"enum\" href=\"winnow/error/enum.StrContext.html\" title=\"enum winnow::error::StrContext\">StrContext</a>",1,["winnow::error::StrContext"]],["impl Freeze for <a class=\"enum\" href=\"winnow/error/enum.StrContextValue.html\" title=\"enum winnow::error::StrContextValue\">StrContextValue</a>",1,["winnow::error::StrContextValue"]],["impl&lt;I, C&gt; Freeze for <a class=\"enum\" href=\"winnow/error/enum.TreeError.html\" title=\"enum winnow::error::TreeError\">TreeError</a>&lt;I, C&gt;<span class=\"where fmt-newline\">where\n    I: Freeze,</span>",1,["winnow::error::TreeError"]],["impl&lt;I, C&gt; Freeze for <a class=\"enum\" href=\"winnow/error/enum.TreeErrorFrame.html\" title=\"enum winnow::error::TreeErrorFrame\">TreeErrorFrame</a>&lt;I, C&gt;<span class=\"where fmt-newline\">where\n    C: Freeze,\n    I: Freeze,</span>",1,["winnow::error::TreeErrorFrame"]],["impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"winnow/error/struct.TreeErrorBase.html\" title=\"struct winnow::error::TreeErrorBase\">TreeErrorBase</a>&lt;I&gt;<span class=\"where fmt-newline\">where\n    I: Freeze,</span>",1,["winnow::error::TreeErrorBase"]],["impl&lt;I, C&gt; Freeze for <a class=\"struct\" href=\"winnow/error/struct.TreeErrorContext.html\" title=\"struct winnow::error::TreeErrorContext\">TreeErrorContext</a>&lt;I, C&gt;<span class=\"where fmt-newline\">where\n    C: Freeze,\n    I: Freeze,</span>",1,["winnow::error::TreeErrorContext"]],["impl&lt;I, C&gt; Freeze for <a class=\"struct\" href=\"winnow/error/struct.VerboseError.html\" title=\"struct winnow::error::VerboseError\">VerboseError</a>&lt;I, C&gt;",1,["winnow::error::VerboseError"]],["impl&lt;C&gt; Freeze for <a class=\"enum\" href=\"winnow/error/enum.VerboseErrorKind.html\" title=\"enum winnow::error::VerboseErrorKind\">VerboseErrorKind</a>&lt;C&gt;<span class=\"where fmt-newline\">where\n    C: Freeze,</span>",1,["winnow::error::VerboseErrorKind"]],["impl Freeze for <a class=\"enum\" href=\"winnow/error/enum.ErrorKind.html\" title=\"enum winnow::error::ErrorKind\">ErrorKind</a>",1,["winnow::error::ErrorKind"]],["impl&lt;I, E&gt; Freeze for <a class=\"struct\" href=\"winnow/error/struct.ParseError.html\" title=\"struct winnow::error::ParseError\">ParseError</a>&lt;I, E&gt;<span class=\"where fmt-newline\">where\n    E: Freeze,\n    I: Freeze,</span>",1,["winnow::error::ParseError"]],["impl Freeze for <a class=\"struct\" href=\"winnow/stream/struct.Bytes.html\" title=\"struct winnow::stream::Bytes\">Bytes</a>",1,["winnow::stream::Bytes"]],["impl Freeze for <a class=\"struct\" href=\"winnow/stream/struct.BStr.html\" title=\"struct winnow::stream::BStr\">BStr</a>",1,["winnow::stream::BStr"]],["impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"winnow/stream/struct.Located.html\" title=\"struct winnow::stream::Located\">Located</a>&lt;I&gt;<span class=\"where fmt-newline\">where\n    I: Freeze,</span>",1,["winnow::stream::Located"]],["impl&lt;I, S&gt; Freeze for <a class=\"struct\" href=\"winnow/stream/struct.Stateful.html\" title=\"struct winnow::stream::Stateful\">Stateful</a>&lt;I, S&gt;<span class=\"where fmt-newline\">where\n    I: Freeze,\n    S: Freeze,</span>",1,["winnow::stream::Stateful"]],["impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"winnow/stream/struct.Partial.html\" title=\"struct winnow::stream::Partial\">Partial</a>&lt;I&gt;<span class=\"where fmt-newline\">where\n    I: Freeze,</span>",1,["winnow::stream::Partial"]],["impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"winnow/stream/struct.BitOffsets.html\" title=\"struct winnow::stream::BitOffsets\">BitOffsets</a>&lt;I&gt;<span class=\"where fmt-newline\">where\n    I: Freeze,</span>",1,["winnow::stream::BitOffsets"]],["impl Freeze for <a class=\"enum\" href=\"winnow/stream/enum.CompareResult.html\" title=\"enum winnow::stream::CompareResult\">CompareResult</a>",1,["winnow::stream::CompareResult"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"winnow/stream/struct.Checkpoint.html\" title=\"struct winnow::stream::Checkpoint\">Checkpoint</a>&lt;T&gt;<span class=\"where fmt-newline\">where\n    T: Freeze,</span>",1,["winnow::stream::Checkpoint"]],["impl Freeze for <a class=\"struct\" href=\"winnow/stream/struct.Range.html\" title=\"struct winnow::stream::Range\">Range</a>",1,["winnow::stream::Range"]],["impl Freeze for <a class=\"enum\" href=\"winnow/binary/enum.Endianness.html\" title=\"enum winnow::binary::Endianness\">Endianness</a>",1,["winnow::binary::Endianness"]],["impl&lt;F, I, O, E&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.ParserIterator.html\" title=\"struct winnow::combinator::ParserIterator\">ParserIterator</a>&lt;F, I, O, E&gt;<span class=\"where fmt-newline\">where\n    E: Freeze,\n    F: Freeze,\n    I: Freeze,</span>",1,["winnow::combinator::core::ParserIterator"]],["impl&lt;'p, P&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.ByRef.html\" title=\"struct winnow::combinator::ByRef\">ByRef</a>&lt;'p, P&gt;",1,["winnow::combinator::parser::ByRef"]],["impl&lt;F, G, I, O, O2, E&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.Map.html\" title=\"struct winnow::combinator::Map\">Map</a>&lt;F, G, I, O, O2, E&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,\n    G: Freeze,</span>",1,["winnow::combinator::parser::Map"]],["impl&lt;F, G, I, O, O2, E, E2&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.TryMap.html\" title=\"struct winnow::combinator::TryMap\">TryMap</a>&lt;F, G, I, O, O2, E, E2&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,\n    G: Freeze,</span>",1,["winnow::combinator::parser::TryMap"]],["impl&lt;F, G, I, O, O2, E&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.VerifyMap.html\" title=\"struct winnow::combinator::VerifyMap\">VerifyMap</a>&lt;F, G, I, O, O2, E&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,\n    G: Freeze,</span>",1,["winnow::combinator::parser::VerifyMap"]],["impl&lt;F, G, I, O, O2, E&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.AndThen.html\" title=\"struct winnow::combinator::AndThen\">AndThen</a>&lt;F, G, I, O, O2, E&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,\n    G: Freeze,</span>",1,["winnow::combinator::parser::AndThen"]],["impl&lt;P, I, O, O2, E&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.ParseTo.html\" title=\"struct winnow::combinator::ParseTo\">ParseTo</a>&lt;P, I, O, O2, E&gt;<span class=\"where fmt-newline\">where\n    P: Freeze,</span>",1,["winnow::combinator::parser::ParseTo"]],["impl&lt;F, G, H, I, O, O2, E&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.FlatMap.html\" title=\"struct winnow::combinator::FlatMap\">FlatMap</a>&lt;F, G, H, I, O, O2, E&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,\n    G: Freeze,</span>",1,["winnow::combinator::parser::FlatMap"]],["impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.CompleteErr.html\" title=\"struct winnow::combinator::CompleteErr\">CompleteErr</a>&lt;F&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,</span>",1,["winnow::combinator::parser::CompleteErr"]],["impl&lt;F, G, I, O, O2: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.70.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>, E&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.Verify.html\" title=\"struct winnow::combinator::Verify\">Verify</a>&lt;F, G, I, O, O2, E&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,\n    G: Freeze,</span>",1,["winnow::combinator::parser::Verify"]],["impl&lt;F, I, O, O2, E&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.Value.html\" title=\"struct winnow::combinator::Value\">Value</a>&lt;F, I, O, O2, E&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,\n    O2: Freeze,</span>",1,["winnow::combinator::parser::Value"]],["impl&lt;F, I, O, E&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.Void.html\" title=\"struct winnow::combinator::Void\">Void</a>&lt;F, I, O, E&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,</span>",1,["winnow::combinator::parser::Void"]],["impl&lt;F, I, O, E&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.Recognize.html\" title=\"struct winnow::combinator::Recognize\">Recognize</a>&lt;F, I, O, E&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,</span>",1,["winnow::combinator::parser::Recognize"]],["impl&lt;F, I, O, E&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.WithRecognized.html\" title=\"struct winnow::combinator::WithRecognized\">WithRecognized</a>&lt;F, I, O, E&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,</span>",1,["winnow::combinator::parser::WithRecognized"]],["impl&lt;F, I, O, E&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.Span.html\" title=\"struct winnow::combinator::Span\">Span</a>&lt;F, I, O, E&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,</span>",1,["winnow::combinator::parser::Span"]],["impl&lt;F, I, O, E&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.WithSpan.html\" title=\"struct winnow::combinator::WithSpan\">WithSpan</a>&lt;F, I, O, E&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,</span>",1,["winnow::combinator::parser::WithSpan"]],["impl&lt;F, I, O, O2, E&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.OutputInto.html\" title=\"struct winnow::combinator::OutputInto\">OutputInto</a>&lt;F, I, O, O2, E&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,</span>",1,["winnow::combinator::parser::OutputInto"]],["impl&lt;F, I, O, E, E2&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.ErrInto.html\" title=\"struct winnow::combinator::ErrInto\">ErrInto</a>&lt;F, I, O, E, E2&gt;<span class=\"where fmt-newline\">where\n    F: Freeze,</span>",1,["winnow::combinator::parser::ErrInto"]],["impl&lt;F, I, O, E, C&gt; Freeze for <a class=\"struct\" href=\"winnow/combinator/struct.Context.html\" title=\"struct winnow::combinator::Context\">Context</a>&lt;F, I, O, E, C&gt;<span class=\"where fmt-newline\">where\n    C: Freeze,\n    F: Freeze,</span>",1,["winnow::combinator::parser::Context"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()